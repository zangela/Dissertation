prev_rig_2[1,i]=1
}
}
tab_rig = tabella.sommario(prev_rig_2, y_ver)
y_ver<-matrix(-1,nrow=nrow(ins.ver),ncol=1)
for (i in 1: nrow(ins.ver))
{
if (as.numeric(ins.ver[i,6])==2) #rigettate contro all
{
y_ver[i,1]=1
}
}
#calcolo le frequenze in base alle due classi sopra definite
freq_rel_y=(table(y_ver)/nrow(datidef))[[1]] #num di oss in ins.ver di tipo -1
pos =as.integer(freq_rel_y*length(prev_qua))
tmp=sort(prev_qua, decreasing = FALSE)
soglia_rig =tmp[pos]
#0.16649
prev_qua_2=matrix(-1,nrow=1,ncol=length(prev_qua))
for(i in 1:ncol(prev_qua))
{
if (prev_qua[1,i]>=soglia_qua)
{
prev_qua_2[1,i]=1
}
}
tab_rig = tabella.sommario(prev_qua_2, y_ver)
y_ver<-matrix(-1,nrow=nrow(ins.ver),ncol=1)
for (i in 1: nrow(ins.ver))
{
if (as.numeric(ins.ver[i,6])==2) #rigettate contro all
{
y_ver[i,1]=1
}
}
#calcolo le frequenze in base alle due classi sopra definite
freq_rel_y=(table(y_ver)/nrow(datidef))[[1]] #num di oss in ins.ver di tipo -1
pos =as.integer(freq_rel_y*length(prev_qua))
tmp=sort(prev_qua, decreasing = TRUE)
soglia_rig =tmp[pos]
#0.16649
prev_qua_2=matrix(-1,nrow=1,ncol=length(prev_qua))
for(i in 1:ncol(prev_qua))
{
if (prev_qua[1,i]>=soglia_qua)
{
prev_qua_2[1,i]=1
}
}
tab_rig = tabella.sommario(prev_qua_2, y_ver)
y_ver<-matrix(-1,nrow=nrow(ins.ver),ncol=1)
for (i in 1: nrow(ins.ver))
{
if (as.numeric(ins.ver[i,6])==2) #rigettate contro all
{
y_ver[i,1]=1
}
}
#calcolo le frequenze in base alle due classi sopra definite
freq_rel_y=(table(y_ver)/nrow(datidef))[[1]] #num di oss in ins.ver di tipo -1
pos =as.integer(freq_rel_y*length(prev_qua))
tmp=sort(prev_qua, decreasing = FALSE)
soglia_rig =tmp[pos]
#0.16649
prev_qua_2=matrix(-1,nrow=1,ncol=length(prev_qua))
for(i in 1:ncol(prev_qua))
{
if (prev_qua[1,i]>=soglia_qua)
{
prev_qua_2[1,i]=1
}
}
tab_rig = tabella.sommario(prev_qua_2, y_ver)
y_ver<-matrix(-1,nrow=nrow(ins.ver),ncol=1)
for (i in 1: nrow(ins.ver))
{
if (as.numeric(ins.ver[i,6])==2) #rigettate contro all
{
y_ver[i,1]=1
}
}
#calcolo le frequenze in base alle due classi sopra definite
freq_rel_y=(table(y_ver)/nrow(datidef))[[1]] #num di oss in ins.ver di tipo -1
pos =as.integer(freq_rel_y*length(prev_qua))
tmp=sort(prev_qua, decreasing = TRUE)
soglia_rig =tmp[pos]
#0.16649
prev_qua_2=matrix(-1,nrow=1,ncol=length(prev_qua))
for(i in 1:ncol(prev_qua))
{
if (prev_qua[1,i]>=soglia_qua)
{
prev_qua_2[1,i]=1
}
}
tab_rig = tabella.sommario(prev_qua_2, y_ver)
y_ver<-matrix(-1,nrow=nrow(ins.ver),ncol=1)
for (i in 1: nrow(ins.ver))
{
if (as.numeric(ins.ver[i,6])==2) #rigettate contro all
{
y_ver[i,1]=1
}
}
#calcolo le frequenze in base alle due classi sopra definite
freq_rel_y=(table(y_ver)/nrow(datidef))[[1]] #num di oss in ins.ver di tipo -1
pos =as.integer(freq_rel_y*length(prev_qua))
tmp=sort(prev_qua, decreasing = TRUE)
soglia_qua =tmp[pos]
#0.16649
prev_qua_2=matrix(-1,nrow=1,ncol=length(prev_qua))
for(i in 1:ncol(prev_qua))
{
if (prev_qua[1,i]>=soglia_qua)
{
prev_qua_2[1,i]=1
}
}
tab_rig = tabella.sommario(prev_qua_2, y_ver)
y_ver<-matrix(-1,nrow=nrow(ins.ver),ncol=1)
for (i in 1: nrow(ins.ver))
{
if (as.numeric(ins.ver[i,6])==2) #rigettate contro all
{
y_ver[i,1]=1
}
}
#calcolo le frequenze in base alle due classi sopra definite
freq_rel_y=(table(y_ver)/nrow(datidef))[[1]] #num di oss in ins.ver di tipo -1
pos =as.integer(freq_rel_y*length(prev_qua))
tmp=sort(prev_qua, decreasing = FALSE)
soglia_qua =tmp[pos]
#0.16649
prev_qua_2=matrix(-1,nrow=1,ncol=length(prev_qua))
for(i in 1:ncol(prev_qua))
{
if (prev_qua[1,i]>=soglia_qua)
{
prev_qua_2[1,i]=1
}
}
tab_rig = tabella.sommario(prev_qua_2, y_ver)
tab_qua = tabella.sommario(prev_qua_2, y_ver)
y_ver<-matrix(-1,nrow=nrow(ins.ver),ncol=1)
for (i in 1: nrow(ins.ver))
{
if (as.numeric(ins.ver[i,6])==0) #rigettate contro all
{
y_ver[i,1]=1
}
}
#calcolo le frequenze in base alle due classi sopra definite
freq_rel_y=(table(y_ver)/nrow(datidef))[[1]] #num di oss in ins.ver di tipo -1
pos =as.integer(freq_rel_y*length(prev_pass))
tmp=sort(prev_pass, decreasing = TRUE)
soglia_pass =tmp[pos]
#0.16649
prev_pass_2=matrix(-1,nrow=1,ncol=length(prev_pass))
for(i in 1:ncol(prev_pass))
{
if (prev_pass[1,i]>=soglia_pass)
{
prev_pass_2[1,i]=1
}
}
tab_pass = tabella.sommario(prev_pass_2, y_ver)
y_ver<-matrix(-1,nrow=nrow(ins.ver),ncol=1)
for (i in 1: nrow(ins.ver))
{
if (as.numeric(ins.ver[i,6])==0) #rigettate contro all
{
y_ver[i,1]=1
}
}
#calcolo le frequenze in base alle due classi sopra definite
freq_rel_y=(table(y_ver)/nrow(datidef))[[1]] #num di oss in ins.ver di tipo -1
pos =as.integer(freq_rel_y*length(prev_pass))
tmp=sort(prev_pass, decreasing = FALSE)
soglia_pass =tmp[pos]
#0.16649
prev_pass_2=matrix(-1,nrow=1,ncol=length(prev_pass))
for(i in 1:ncol(prev_pass))
{
if (prev_pass[1,i]>=soglia_pass)
{
prev_pass_2[1,i]=1
}
}
tab_pass = tabella.sommario(prev_pass_2, y_ver)
y_ver<-matrix(-1,nrow=nrow(ins.ver),ncol=1)
for (i in 1: nrow(ins.ver))
{
if (as.numeric(ins.ver[i,6])==1) #rigettate contro all
{
y_ver[i,1]=1
}
}
#calcolo le frequenze in base alle due classi sopra definite
freq_rel_y=(table(y_ver)/nrow(datidef))[[1]] #num di oss in ins.ver di tipo -1
pos =as.integer(freq_rel_y*length(prev_rig))
tmp=sort(prev_rig, decreasing = FALSE)
soglia_rig =tmp[pos]
#0.16649
prev_rig_2=matrix(-1,nrow=1,ncol=length(prev_rig))
for(i in 1:ncol(prev_rig))
{
if (prev_rig[1,i]>=soglia_rig)
{
prev_rig_2[1,i]=1
}
}
tab_rig = tabella.sommario(prev_rig_2, y_ver)
y_ver<-matrix(-1,nrow=nrow(ins.ver),ncol=1)
for (i in 1: nrow(ins.ver))
{
if (as.numeric(ins.ver[i,6])==1) #rigettate contro all
{
y_ver[i,1]=1
}
}
#calcolo le frequenze in base alle due classi sopra definite
freq_rel_y=(table(y_ver)/nrow(datidef))[[1]] #num di oss in ins.ver di tipo -1
pos =as.integer(freq_rel_y*length(prev_rig))
tmp=sort(prev_rig, decreasing = TRUE)
soglia_rig =tmp[pos]
#0.16649
prev_rig_2=matrix(-1,nrow=1,ncol=length(prev_rig))
for(i in 1:ncol(prev_rig))
{
if (prev_rig[1,i]>=soglia_rig)
{
prev_rig_2[1,i]=1
}
}
tab_rig = tabella.sommario(prev_rig_2, y_ver)
y_ver<-matrix(-1,nrow=nrow(ins.ver),ncol=1)
for (i in 1: nrow(ins.ver))
{
if (as.numeric(ins.ver[i,6])==2) #rigettate contro all
{
y_ver[i,1]=1
}
}
#calcolo le frequenze in base alle due classi sopra definite
freq_rel_y=(table(y_ver)/nrow(datidef))[[1]] #num di oss in ins.ver di tipo -1
pos =as.integer(freq_rel_y*length(prev_qua))
tmp=sort(prev_qua, decreasing = TRUE)
soglia_qua =tmp[pos]
#0.16649
prev_qua_2=matrix(-1,nrow=1,ncol=length(prev_qua))
for(i in 1:ncol(prev_qua))
{
if (prev_qua[1,i]>=soglia_qua)
{
prev_qua_2[1,i]=1
}
}
tab_qua = tabella.sommario(prev_qua_2, y_ver)
y_ver<-matrix(-1,nrow=nrow(ins.ver),ncol=1)
for (i in 1: nrow(ins.ver))
{
if (as.numeric(ins.ver[i,6])==2) #rigettate contro all
{
y_ver[i,1]=1
}
}
#calcolo le frequenze in base alle due classi sopra definite
freq_rel_y=(table(y_ver)/nrow(datidef))[[1]] #num di oss in ins.ver di tipo -1
pos =as.integer(freq_rel_y*length(prev_qua))
tmp=sort(prev_qua, decreasing = FALSE)
soglia_qua =tmp[pos]
#0.16649
prev_qua_2=matrix(-1,nrow=1,ncol=length(prev_qua))
for(i in 1:ncol(prev_qua))
{
if (prev_qua[1,i]>=soglia_qua)
{
prev_qua_2[1,i]=1
}
}
tab_qua = tabella.sommario(prev_qua_2, y_ver)
prev_qua = prediction(max_part, ins.ver, div, model_qua)
x = which.max(prev_qua)
print(prev_qua[x])
min = which.min(prev_qua)
prev_qua=prev_qua/prev_qua[min]
x = which.max(prev_qua)
print(prev_qua[x])
x = which.min(prev_qua)
print(prev_qua[x])
y_ver<-matrix(-1,nrow=nrow(ins.ver),ncol=1)
for (i in 1: nrow(ins.ver))
{
if (as.numeric(ins.ver[i,6])==2) #rigettate contro all
{
y_ver[i,1]=1
}
}
#calcolo le frequenze in base alle due classi sopra definite
freq_rel_y=(table(y_ver)/nrow(datidef))[[1]] #num di oss in ins.ver di tipo -1
pos =as.integer(freq_rel_y*length(prev_qua))
tmp=sort(prev_qua, decreasing = TRUE)
soglia_qua =tmp[pos]
#0.16649
prev_qua_2=matrix(-1,nrow=1,ncol=length(prev_qua))
for(i in 1:ncol(prev_qua))
{
if (prev_qua[1,i]>=soglia_qua)
{
prev_qua_2[1,i]=1
}
}
tab_qua = tabella.sommario(prev_qua_2, y_ver)
y_ver<-matrix(-1,nrow=nrow(ins.ver),ncol=1)
for (i in 1: nrow(ins.ver))
{
if (as.numeric(ins.ver[i,6])==2) #rigettate contro all
{
y_ver[i,1]=1
}
}
#calcolo le frequenze in base alle due classi sopra definite
freq_rel_y=(table(y_ver)/nrow(datidef))[[1]] #num di oss in ins.ver di tipo -1
pos =as.integer(freq_rel_y*length(prev_qua))
tmp=sort(prev_qua, decreasing = FALSE)
soglia_qua =tmp[pos]
#0.16649
prev_qua_2=matrix(-1,nrow=1,ncol=length(prev_qua))
for(i in 1:ncol(prev_qua))
{
if (prev_qua[1,i]>=soglia_qua)
{
prev_qua_2[1,i]=1
}
}
tab_qua = tabella.sommario(prev_qua_2, y_ver)
y_ver<-matrix(-1,nrow=nrow(ins.ver),ncol=1)
for (i in 1: nrow(ins.ver))
{
if (as.numeric(ins.ver[i,6])==2) #rigettate contro all
{
y_ver[i,1]=1
}
}
#calcolo le frequenze in base alle due classi sopra definite
freq_rel_y=(table(y_ver)/nrow(datidef))[[1]] #num di oss in ins.ver di tipo -1
pos =as.integer(freq_rel_y*length(prev_qua))
tmp=sort(prev_qua, decreasing = TRUE)
soglia_qua =tmp[pos]
#0.16649
prev_qua_2=matrix(-1,nrow=1,ncol=length(prev_qua))
for(i in 1:ncol(prev_qua))
{
if (prev_qua[1,i]>=soglia_qua)
{
prev_qua_2[1,i]=1
}
}
tab_qua = tabella.sommario(prev_qua_2, y_ver)
wf = data.frame(word=colnames(f_obj_t), freq=f_obj_t[1,])
p = ggplot(subset(wf, freq>50), aes(word, freq)) #???prendiamo quelle con freq>50
p = p + geom_bar(stat="identity",color="darkblue", fill="lightblue")
p = p + theme(axis.text.x=element_text(angle=45, hjust=1))
#Word Cloud
set.seed(123)
wordcloud(colnames(f_obj_t), f_obj_t, max.words=50,colors=brewer.pal(6,"Dark2"), random.order=TRUE)
plot.roc(as.numeric(y_ver), as.numeric(prev_rig), auc = T, grid = T, legacy.axes=T,xlim=c(1,-1))
#CALCOLARE L'AREA SOTTO LA CURVA ROC!!!
auc.lineare <- auc(as.numeric(y_ver), as.numeric(prev_rig))[1]
auc.lineare
y_ver<-matrix(-1,nrow=nrow(ins.ver),ncol=1)
for (i in 1: nrow(ins.ver))
{
if (as.numeric(ins.ver[i,6])==1) #rigettate contro all
{
y_ver[i,1]=1
}
}
#calcolo le frequenze in base alle due classi sopra definite
freq_rel_y=(table(y_ver)/nrow(datidef))[[1]] #num di oss in ins.ver di tipo -1
pos =as.integer(freq_rel_y*length(prev_rig))
tmp=sort(prev_rig, decreasing = TRUE)
soglia_rig =tmp[pos]
#0.16649
prev_rig_2=matrix(-1,nrow=1,ncol=length(prev_rig))
for(i in 1:ncol(prev_rig))
{
if (prev_rig[1,i]>=soglia_rig)
{
prev_rig_2[1,i]=1
}
}
tab_rig = tabella.sommario(prev_rig_2, y_ver)
plot.roc(as.numeric(y_ver), as.numeric(prev_rig), auc = T, grid = T, legacy.axes=T,xlim=c(1,-1))
#CALCOLARE L'AREA SOTTO LA CURVA ROC!!!
auc.lineare <- auc(as.numeric(y_ver), as.numeric(prev_rig))[1]
auc.lineare
#CALCOLO SOGLIA p*
##############################################
y_ver<-matrix(-1,nrow=nrow(ins.ver),ncol=1)
for (i in 1: nrow(ins.ver))
{
if (as.numeric(ins.ver[i,6])==2) #rigettate contro all
{
y_ver[i,1]=1
}
}
#calcolo le frequenze in base alle due classi sopra definite
freq_rel_y=(table(y_ver)/nrow(datidef))[[1]] #num di oss in ins.ver di tipo -1
pos =as.integer(freq_rel_y*length(prev_qua))
tmp=sort(prev_qua, decreasing = TRUE)
soglia_qua =tmp[pos]
#0.16649
prev_qua_2=matrix(-1,nrow=1,ncol=length(prev_qua))
for(i in 1:ncol(prev_qua))
{
if (prev_qua[1,i]>=soglia_qua)
{
prev_qua_2[1,i]=1
}
}
tab_qua = tabella.sommario(prev_qua_2, y_ver)
plot.roc(as.numeric(y_ver), as.numeric(prev_qua_2), auc = T, grid = T, legacy.axes=T,xlim=c(1,-1))
#CALCOLARE L'AREA SOTTO LA CURVA ROC!!!
auc.lineare <- auc(as.numeric(y_ver), as.numeric(prev_qua_2))[1]
auc.lineare
y_ver<-matrix(-1,nrow=nrow(ins.ver),ncol=1)
for (i in 1: nrow(ins.ver))
{
if (as.numeric(ins.ver[i,6])==1) #rigettate contro all
{
y_ver[i,1]=1
}
}
#calcolo le frequenze in base alle due classi sopra definite
freq_rel_y=(table(y_ver)/nrow(datidef))[[1]] #num di oss in ins.ver di tipo -1
pos =as.integer(freq_rel_y*length(prev_rig))
tmp=sort(prev_rig, decreasing = TRUE)
soglia_rig =tmp[pos]
#0.16649
prev_rig_2=matrix(-1,nrow=1,ncol=length(prev_rig))
for(i in 1:ncol(prev_rig))
{
if (prev_rig[1,i]>=soglia_rig)
{
prev_rig_2[1,i]=1
}
}
tab_rig = tabella.sommario(prev_rig_2, y_ver)
plot.roc(as.numeric(y_ver), as.numeric(prev_rig_2), auc = T, grid = T, legacy.axes=T,xlim=c(1,-1))
#CALCOLARE L'AREA SOTTO LA CURVA ROC!!!
auc.lineare <- auc(as.numeric(y_ver), as.numeric(prev_rig_2))[1]
auc.lineare
y_ver<-matrix(-1,nrow=nrow(ins.ver),ncol=1)
for (i in 1: nrow(ins.ver))
{
if (as.numeric(ins.ver[i,6])==0) #rigettate contro all
{
y_ver[i,1]=1
}
}
#calcolo le frequenze in base alle due classi sopra definite
freq_rel_y=(table(y_ver)/nrow(datidef))[[1]] #num di oss in ins.ver di tipo -1
pos =as.integer(freq_rel_y*length(prev_pass))
tmp=sort(prev_pass, decreasing = FALSE)
soglia_pass =tmp[pos]
#0.16649
prev_pass_2=matrix(-1,nrow=1,ncol=length(prev_pass))
for(i in 1:ncol(prev_pass))
{
if (prev_pass[1,i]>=soglia_pass)
{
prev_pass_2[1,i]=1
}
}
tab_pass = tabella.sommario(prev_pass_2, y_ver)
plot.roc(as.numeric(y_ver), as.numeric(prev_pass_2), auc = T, grid = T, legacy.axes=T,xlim=c(1,-1))
#CALCOLARE L'AREA SOTTO LA CURVA ROC!!!
auc.lineare <- auc(as.numeric(y_ver), as.numeric(prev_pass_2))[1]
auc.lineare
y_ver<-matrix(-1,nrow=nrow(ins.ver),ncol=1)
for (i in 1: nrow(ins.ver))
{
if (as.numeric(ins.ver[i,6])==0) #passate contro all
{
y_ver[i,1]=1
}
}
#calcolo le frequenze in base alle due classi sopra definite
freq_rel_y=(table(y_ver)/nrow(datidef))[[1]] #num di oss in ins.ver di tipo -1
pos =as.integer(freq_rel_y*length(prev_pass))
tmp=sort(prev_pass, decreasing = FALSE)
soglia_pass =tmp[pos]
#0.16649
prev_pass_2=matrix(-1,nrow=1,ncol=length(prev_pass))
for(i in 1:ncol(prev_pass))
{
if (prev_pass[1,i]>=soglia_pass)
{
prev_pass_2[1,i]=1
}
}
tab_pass = tabella.sommario(prev_pass_2, y_ver)
plot.roc(as.numeric(y_ver), as.numeric(prev_pass_2), auc = T, grid = T, legacy.axes=T,xlim=c(1,-1))
#CALCOLARE L'AREA SOTTO LA CURVA ROC!!!
auc.lineare <- auc(as.numeric(y_ver), as.numeric(prev_pass_2))[1]
auc.lineare
plot.roc(as.numeric(y_ver), as.numeric(prev_pass_2), auc = T, grid = T, legacy.axes=T,xlim=c(0,1))
#CALCOLARE L'AREA SOTTO LA CURVA ROC!!!
auc.lineare <- auc(as.numeric(y_ver), as.numeric(prev_pass_2))[1]
auc.lineare
plot.roc(as.numeric(y_ver), as.numeric(prev_pass_2), auc = T, grid = T, legacy.axes=T,xlim=c(1,0))
